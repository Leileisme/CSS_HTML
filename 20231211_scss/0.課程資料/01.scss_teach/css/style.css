@charset "UTF-8";
*,
*::before,
*::after {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  list-style: none;
}

.container {
  width: 75%;
  padding-left: 15px;
  padding-right: 15px;
  margin: auto;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 20px 0 20px;
}

p {
  margin-bottom: 1rem;
}

section {
  margin-bottom: 2rem;
}

/* CSS 原生變數 */
:root {
  --primary: #0d6efd;
  --secondary: #6c757d;
  --success: #198754;
  --info: #0dcaf0;
  --wrarning: #ffc107;
  --danger: #dc3545;
}

/* 多行註解，會編譯出去 */
/* SCSS 變數 */
h1 {
  background: -webkit-gradient(linear, left bottom, left top, from(rgb(0, 0, 50)), color-stop(50%, rgb(0, 50, 200)), to(rgb(0, 0, 255)));
  background: linear-gradient(0deg, rgb(0, 0, 50) 0%, rgb(0, 50, 200) 50%, rgb(0, 0, 255) 100%);
  color: #fff;
  border: 5px solid #fff;
  border-radius: 0.5rem;
  padding: 0.5rem;
  -webkit-box-shadow: 0 0 5px rgba(0, 0, 0, 0.8);
          box-shadow: 0 0 5px rgba(0, 0, 0, 0.8);
  margin-bottom: 0.5rem;
}

/* 02 流程控制 */
.mybox {
  width: 150px;
  height: 150px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  background-color: blue;
  /* 使用 and 兩運算式條件都成立 */
  color: white !important;
  /* 使用 or 兩運算式其中之一成立，不能用 || */
  font-weight: bolder;
  font-size: 30px;
  border: 10px dashed yellow;
  /* 內建提供的函式，類似三元運算子，函式沒有 @ */
  outline: 10px solid green;
}

.through-1 {
  width: 50px;
  height: 50px;
  display: inline-block;
  background: #aaa;
}

.through-2 {
  width: 100px;
  height: 100px;
  display: inline-block;
  background: #aaa;
}

.through-3 {
  width: 150px;
  height: 150px;
  display: inline-block;
  background: #aaa;
}

.to-1 {
  width: 50px;
  height: 50px;
  display: inline-block;
  background: #333;
}

.to-2 {
  width: 100px;
  height: 100px;
  display: inline-block;
  background: #333;
}

/* 嵌套巢狀(nested) */
#section03 .menu {
  margin-top: 2rem;
  padding: 0;
  font-size: 0;
}
#section03 .menu li {
  display: inline-block;
  font-size: 1rem;
  width: 100px;
  text-align: center;
}
#section03 .menu li a {
  display: block;
  background: black;
  color: white;
  text-decoration: none;
  padding: 0.5rem;
}
#section03 .menu li a:hover {
  color: yellow;
  background: darkslateblue;
}
#section03 .menu li + li {
  border-left: 1px solid #fff;
}
#section03 li + li {
  border-left: 1px solid yellow;
}

.clearfix::after {
  content: "";
  display: block;
  clear: both;
}

/*
  嵌套有利有弊，嵌套階層不控制，會產生 CSS 選擇器過長，檔案會變大
  因此在嵌套時，思考如何快速有效選擇到目標，
  一般使用 #id 限制一個大區塊，再選擇裡面的某個元件區塊，再選擇到目標
*/
#exercise .row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
#exercise .col {
  width: 31.333333%;
  margin: 1%;
  border: 1px solid #333;
  padding: 1rem;
  -webkit-box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
          box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
  -webkit-transition: 0.5s;
  transition: 0.5s;
}
#exercise .col .card .card-body a {
  text-decoration: none;
  color: red;
}
#exercise .col .card .card-body a:hover {
  -webkit-transform: translateY(-20px);
          transform: translateY(-20px);
}
#exercise .card a {
  text-decoration: none;
  color: red;
}
#exercise .card a:hover {
  -webkit-transform: translateY(-20px);
          transform: translateY(-20px);
}
#exercise img {
  max-width: 100%;
}

/* 04.extend(繼承、擴展) % */
/*  使用 CSS 選擇器擴展，擴展後會被編譯到 CSS 檔案中 */
/*  使用佔位選擇器 % 擴展，擴展後不會被編譯到 CSS 檔案中 */
/* 擴展後的樣式會被群組打包在一起 */
.box3, .box2, .box1 {
  width: 50px;
  height: 50px;
  float: left;
}

#extend {
  margin-top: 1rem;
  overflow: auto;
}

.box1 {
  background: red;
}

.box2 {
  background: green;
}

.box3 {
  background: blue;
}

/* 05.計算 */
.box4 {
  /* 加法 */
  width: 100px;
  width: 100px;
  height: 100px;
  /* 減法 */
  width: 50px;
  width: 50px;
  height: 50px;
  /* 乘法 */
  width: 100px;
  height: 100px;
  /* 除法 */
  width: 50px;
  height: 50px;
  line-height: 1;
  /* 取餘數 */
  margin-top: 20px;
  margin-bottom: calc(20px + 1vw);
}

/* 06.函式 */
/* 
  @function 與 @mixin 有點像，@function 必須使用 @return 來返回結果(符合 CSS 規範的值)
  @mixin 可以返回一段 CSS 樣式
*/
.funcbox {
  width: 100px;
  height: 100px;
  color: white;
  font-size: 20px;
  width: 200px;
  height: 100px;
  background: deeppink;
}

.rem {
  font-size: 1rem;
  padding: 3rem;
}

#section06 .container p {
  font-size: 18px;
  line-height: 27px;
}
#section06 .row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
}
#section06 .row .col {
  border: 1px solid #333;
  width: 33.3333333333%;
  padding: 1%;
  margin: 1% 0;
}

/* 07.Mixins */
.mixinTry {
  width: 100px;
  height: 100px;
  background: #333;
}

.boxflex {
  width: 100px;
  height: 100px;
  background: red;
  border: 5px solid #333;
  outline: 5px solid yellow;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.btn {
  display: inline-block;
  color: #fff;
  text-decoration: none;
  line-height: 1.5;
  padding: 0.3rem 0.75rem;
  margin: 0 0.2rem;
  border-radius: 0.25rem;
}

.btn-dark {
  background-color: #000;
}
.btn-dark:hover {
  background-color: #333333;
}

.btn-primary {
  background-color: #0d6efd;
}
.btn-primary:hover {
  background-color: #0257d5;
}

.btn-success {
  background-color: #198754;
}
.btn-success:hover {
  background-color: #115c39;
}

.btn-danger {
  background-color: #dc3545;
}
.btn-danger:hover {
  background-color: #bd2130;
}

/* 08.使用 mixin + @content 設計 RWD */
#section08 .container {
  width: 100%;
}
#section08 .row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
}
#section08 .col {
  width: 100%;
}
#section08 .col + .col {
  margin-top: 20px;
}
@media (min-width: 576px) {
  #section08 .container {
    width: 75%;
  }
  #section08 .col {
    width: 50%;
  }
  #section08 .col + .col {
    margin-top: 0;
  }
}
@media (min-width: 768px) {
  #section08 .col {
    width: 33.333333%;
  }
}
@media (min-width: 992px) {
  #section08 .col {
    width: 25%;
  }
}
@media (min-width: 1200px) {
  #section08 .col {
    width: 20%;
  }
}
@media (min-width: 1400px) {
  #section08 .col {
    width: 10%;
  }
}

/* list 列表，他很像 JS 的陣列，索引從 1 開始取值，不是 0 */
/* 格式是逗號或者空格分隔裡面每一個 item */
/* nth(list, index) */
.list {
  width: 100px;
  width: 200px;
  width: 300px;
}

/* index(list, value) */
.index {
  line-height: 1;
  line-height: 2;
  line-height: 3;
}

/* length($list) */
.length {
  z-index: 3;
}

/* 配合 @for 使用 */
/* # {} 像 js 的 ${} => 模板語法或是插值語法 */
.bg-red {
  background-color: red;
}

.bg-green {
  background-color: green;
}

.bg-blue {
  background-color: blue;
}

.each-bg-red {
  background-color: red;
}

.each-bg-green {
  background-color: green;
}

.each-bg-blue {
  background-color: blue;
}

/* map */
/* map 像 js 的一般物件 */
.nth-map {
  color: primary red;
}

/* 對 map 物件取出 key/value */
.bg-primary {
  background-color: red;
}

.bg-secondary {
  background-color: green;
}

.bg-warning {
  background-color: blue;
}

/* 
	const students = [{
			name: 'kaifu',
			age: 18
			skill:{
				s1:'睡覺',
				s2:'吃飯'
			}
		},
		{
			name: '小明',
			age: 18
			skill:{
				s1:'睡覺',
				s2:'吃飯'
			}
		}
	]
	students[0].name => 'kaifu'
	students[1].name => '小明'
*/
.bth-default {
  width: 100px;
  height: 100px;
}

.bth-box1 {
  width: 200px;
  height: 200px;
}

.bth-box2 {
  width: 300px;
  height: 300px;
}